ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"NRF24L01.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "../../CM7/Core/Src/NRF24L01.c"
  19              		.section	.text.CS_Select,"ax",%progbits
  20              		.align	1
  21              		.global	CS_Select
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	CS_Select:
  27              	.LFB144:
   1:../../CM7/Core/Src/NRF24L01.c **** 
   2:../../CM7/Core/Src/NRF24L01.c **** #include "stm32h7xx_hal.h"
   3:../../CM7/Core/Src/NRF24L01.c **** #include "NRF24L01.h"
   4:../../CM7/Core/Src/NRF24L01.c **** 
   5:../../CM7/Core/Src/NRF24L01.c **** extern SPI_HandleTypeDef hspi1;
   6:../../CM7/Core/Src/NRF24L01.c **** #define NRF24_SPI &hspi1
   7:../../CM7/Core/Src/NRF24L01.c **** 
   8:../../CM7/Core/Src/NRF24L01.c **** #define NRF24_CE_PORT GPIOD
   9:../../CM7/Core/Src/NRF24L01.c **** #define NRF24_CE_PIN GPIO_PIN_15
  10:../../CM7/Core/Src/NRF24L01.c **** 
  11:../../CM7/Core/Src/NRF24L01.c **** #define NRF24_CSN_PORT GPIOD
  12:../../CM7/Core/Src/NRF24L01.c **** #define NRF24_CSN_PIN GPIO_PIN_14
  13:../../CM7/Core/Src/NRF24L01.c **** 
  14:../../CM7/Core/Src/NRF24L01.c **** 
  15:../../CM7/Core/Src/NRF24L01.c **** void CS_Select (void)
  16:../../CM7/Core/Src/NRF24L01.c **** {
  28              		.loc 1 16 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  17:../../CM7/Core/Src/NRF24L01.c **** 	HAL_GPIO_WritePin(NRF24_CSN_PORT, NRF24_CSN_PIN, GPIO_PIN_RESET);
  37              		.loc 1 17 2 view .LVU1
  38 0002 0022     		movs	r2, #0
  39 0004 4FF48041 		mov	r1, #16384
  40 0008 0148     		ldr	r0, .L3
  41 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 2


  42              	.LVL0:
  18:../../CM7/Core/Src/NRF24L01.c **** }
  43              		.loc 1 18 1 is_stmt 0 view .LVU2
  44 000e 08BD     		pop	{r3, pc}
  45              	.L4:
  46              		.align	2
  47              	.L3:
  48 0010 000C0258 		.word	1476529152
  49              		.cfi_endproc
  50              	.LFE144:
  52              		.section	.text.CS_UnSelect,"ax",%progbits
  53              		.align	1
  54              		.global	CS_UnSelect
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	CS_UnSelect:
  60              	.LFB145:
  19:../../CM7/Core/Src/NRF24L01.c **** 
  20:../../CM7/Core/Src/NRF24L01.c **** void CS_UnSelect (void)
  21:../../CM7/Core/Src/NRF24L01.c **** {
  61              		.loc 1 21 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 08B5     		push	{r3, lr}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 3, -8
  69              		.cfi_offset 14, -4
  22:../../CM7/Core/Src/NRF24L01.c **** 	HAL_GPIO_WritePin(NRF24_CSN_PORT, NRF24_CSN_PIN, GPIO_PIN_SET);
  70              		.loc 1 22 2 view .LVU4
  71 0002 0122     		movs	r2, #1
  72 0004 4FF48041 		mov	r1, #16384
  73 0008 0148     		ldr	r0, .L7
  74 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
  75              	.LVL1:
  23:../../CM7/Core/Src/NRF24L01.c **** }
  76              		.loc 1 23 1 is_stmt 0 view .LVU5
  77 000e 08BD     		pop	{r3, pc}
  78              	.L8:
  79              		.align	2
  80              	.L7:
  81 0010 000C0258 		.word	1476529152
  82              		.cfi_endproc
  83              	.LFE145:
  85              		.section	.text.CE_Enable,"ax",%progbits
  86              		.align	1
  87              		.global	CE_Enable
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	CE_Enable:
  93              	.LFB146:
  24:../../CM7/Core/Src/NRF24L01.c **** 
  25:../../CM7/Core/Src/NRF24L01.c **** 
  26:../../CM7/Core/Src/NRF24L01.c **** void CE_Enable (void)
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 3


  27:../../CM7/Core/Src/NRF24L01.c **** {
  94              		.loc 1 27 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 08B5     		push	{r3, lr}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 3, -8
 102              		.cfi_offset 14, -4
  28:../../CM7/Core/Src/NRF24L01.c **** 	HAL_GPIO_WritePin(NRF24_CE_PORT, NRF24_CE_PIN, GPIO_PIN_SET);
 103              		.loc 1 28 2 view .LVU7
 104 0002 0122     		movs	r2, #1
 105 0004 4FF40041 		mov	r1, #32768
 106 0008 0148     		ldr	r0, .L11
 107 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL2:
  29:../../CM7/Core/Src/NRF24L01.c **** }
 109              		.loc 1 29 1 is_stmt 0 view .LVU8
 110 000e 08BD     		pop	{r3, pc}
 111              	.L12:
 112              		.align	2
 113              	.L11:
 114 0010 000C0258 		.word	1476529152
 115              		.cfi_endproc
 116              	.LFE146:
 118              		.section	.text.CE_Disable,"ax",%progbits
 119              		.align	1
 120              		.global	CE_Disable
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	CE_Disable:
 126              	.LFB147:
  30:../../CM7/Core/Src/NRF24L01.c **** 
  31:../../CM7/Core/Src/NRF24L01.c **** void CE_Disable (void)
  32:../../CM7/Core/Src/NRF24L01.c **** {
 127              		.loc 1 32 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131 0000 08B5     		push	{r3, lr}
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 3, -8
 135              		.cfi_offset 14, -4
  33:../../CM7/Core/Src/NRF24L01.c **** 	HAL_GPIO_WritePin(NRF24_CE_PORT, NRF24_CE_PIN, GPIO_PIN_RESET);
 136              		.loc 1 33 2 view .LVU10
 137 0002 0022     		movs	r2, #0
 138 0004 4FF40041 		mov	r1, #32768
 139 0008 0148     		ldr	r0, .L15
 140 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 141              	.LVL3:
  34:../../CM7/Core/Src/NRF24L01.c **** }
 142              		.loc 1 34 1 is_stmt 0 view .LVU11
 143 000e 08BD     		pop	{r3, pc}
 144              	.L16:
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 4


 145              		.align	2
 146              	.L15:
 147 0010 000C0258 		.word	1476529152
 148              		.cfi_endproc
 149              	.LFE147:
 151              		.section	.text.nrf24_WriteReg,"ax",%progbits
 152              		.align	1
 153              		.global	nrf24_WriteReg
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 158              	nrf24_WriteReg:
 159              	.LVL4:
 160              	.LFB148:
  35:../../CM7/Core/Src/NRF24L01.c **** 
  36:../../CM7/Core/Src/NRF24L01.c **** 
  37:../../CM7/Core/Src/NRF24L01.c **** 
  38:../../CM7/Core/Src/NRF24L01.c **** // write a single byte to the particular register
  39:../../CM7/Core/Src/NRF24L01.c **** void nrf24_WriteReg (uint8_t Reg, uint8_t Data)
  40:../../CM7/Core/Src/NRF24L01.c **** {
 161              		.loc 1 40 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		.loc 1 40 1 is_stmt 0 view .LVU13
 166 0000 00B5     		push	{lr}
 167              	.LCFI4:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 14, -4
 170 0002 83B0     		sub	sp, sp, #12
 171              	.LCFI5:
 172              		.cfi_def_cfa_offset 16
  41:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t buf[2];
 173              		.loc 1 41 2 is_stmt 1 view .LVU14
  42:../../CM7/Core/Src/NRF24L01.c **** 	buf[0] = Reg|1<<5;
 174              		.loc 1 42 2 view .LVU15
 175              		.loc 1 42 9 is_stmt 0 view .LVU16
 176 0004 40F02000 		orr	r0, r0, #32
 177              	.LVL5:
 178              		.loc 1 42 9 view .LVU17
 179 0008 8DF80400 		strb	r0, [sp, #4]
  43:../../CM7/Core/Src/NRF24L01.c **** 	buf[1] = Data;
 180              		.loc 1 43 2 is_stmt 1 view .LVU18
 181              		.loc 1 43 9 is_stmt 0 view .LVU19
 182 000c 8DF80510 		strb	r1, [sp, #5]
  44:../../CM7/Core/Src/NRF24L01.c **** 
  45:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS Pin LOW to select the device
  46:../../CM7/Core/Src/NRF24L01.c **** 	CS_Select();
 183              		.loc 1 46 2 is_stmt 1 view .LVU20
 184 0010 FFF7FEFF 		bl	CS_Select
 185              	.LVL6:
  47:../../CM7/Core/Src/NRF24L01.c **** 
  48:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, buf, 2, 1000);
 186              		.loc 1 48 2 view .LVU21
 187 0014 4FF47A73 		mov	r3, #1000
 188 0018 0222     		movs	r2, #2
 189 001a 01A9     		add	r1, sp, #4
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 5


 190 001c 0348     		ldr	r0, .L19
 191 001e FFF7FEFF 		bl	HAL_SPI_Transmit
 192              	.LVL7:
  49:../../CM7/Core/Src/NRF24L01.c **** 
  50:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS HIGH to release the device
  51:../../CM7/Core/Src/NRF24L01.c **** 	CS_UnSelect();
 193              		.loc 1 51 2 view .LVU22
 194 0022 FFF7FEFF 		bl	CS_UnSelect
 195              	.LVL8:
  52:../../CM7/Core/Src/NRF24L01.c **** }
 196              		.loc 1 52 1 is_stmt 0 view .LVU23
 197 0026 03B0     		add	sp, sp, #12
 198              	.LCFI6:
 199              		.cfi_def_cfa_offset 4
 200              		@ sp needed
 201 0028 5DF804FB 		ldr	pc, [sp], #4
 202              	.L20:
 203              		.align	2
 204              	.L19:
 205 002c 00000000 		.word	hspi1
 206              		.cfi_endproc
 207              	.LFE148:
 209              		.section	.text.nrf24_WriteRegMulti,"ax",%progbits
 210              		.align	1
 211              		.global	nrf24_WriteRegMulti
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	nrf24_WriteRegMulti:
 217              	.LVL9:
 218              	.LFB149:
  53:../../CM7/Core/Src/NRF24L01.c **** 
  54:../../CM7/Core/Src/NRF24L01.c **** //write multiple bytes starting from a particular register
  55:../../CM7/Core/Src/NRF24L01.c **** void nrf24_WriteRegMulti (uint8_t Reg, uint8_t *data, int size)
  56:../../CM7/Core/Src/NRF24L01.c **** {
 219              		.loc 1 56 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 8
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		.loc 1 56 1 is_stmt 0 view .LVU25
 224 0000 70B5     		push	{r4, r5, r6, lr}
 225              	.LCFI7:
 226              		.cfi_def_cfa_offset 16
 227              		.cfi_offset 4, -16
 228              		.cfi_offset 5, -12
 229              		.cfi_offset 6, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              	.LCFI8:
 233              		.cfi_def_cfa_offset 24
 234 0004 0C46     		mov	r4, r1
 235 0006 1546     		mov	r5, r2
  57:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t buf[2];
 236              		.loc 1 57 2 is_stmt 1 view .LVU26
  58:../../CM7/Core/Src/NRF24L01.c **** 	buf[0] = Reg|1<<5;
 237              		.loc 1 58 2 view .LVU27
 238              		.loc 1 58 9 is_stmt 0 view .LVU28
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 6


 239 0008 40F02000 		orr	r0, r0, #32
 240              	.LVL10:
 241              		.loc 1 58 9 view .LVU29
 242 000c 8DF80400 		strb	r0, [sp, #4]
  59:../../CM7/Core/Src/NRF24L01.c **** //	buf[1] = Data;
  60:../../CM7/Core/Src/NRF24L01.c **** 
  61:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS Pin LOW to select the device
  62:../../CM7/Core/Src/NRF24L01.c **** 	CS_Select();
 243              		.loc 1 62 2 is_stmt 1 view .LVU30
 244 0010 FFF7FEFF 		bl	CS_Select
 245              	.LVL11:
  63:../../CM7/Core/Src/NRF24L01.c **** 
  64:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, buf, 1, 100);
 246              		.loc 1 64 2 view .LVU31
 247 0014 084E     		ldr	r6, .L23
 248 0016 6423     		movs	r3, #100
 249 0018 0122     		movs	r2, #1
 250 001a 01A9     		add	r1, sp, #4
 251 001c 3046     		mov	r0, r6
 252 001e FFF7FEFF 		bl	HAL_SPI_Transmit
 253              	.LVL12:
  65:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, data, size, 1000);
 254              		.loc 1 65 2 view .LVU32
 255 0022 4FF47A73 		mov	r3, #1000
 256 0026 AAB2     		uxth	r2, r5
 257 0028 2146     		mov	r1, r4
 258 002a 3046     		mov	r0, r6
 259 002c FFF7FEFF 		bl	HAL_SPI_Transmit
 260              	.LVL13:
  66:../../CM7/Core/Src/NRF24L01.c **** 
  67:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS HIGH to release the device
  68:../../CM7/Core/Src/NRF24L01.c **** 	CS_UnSelect();
 261              		.loc 1 68 2 view .LVU33
 262 0030 FFF7FEFF 		bl	CS_UnSelect
 263              	.LVL14:
  69:../../CM7/Core/Src/NRF24L01.c **** }
 264              		.loc 1 69 1 is_stmt 0 view .LVU34
 265 0034 02B0     		add	sp, sp, #8
 266              	.LCFI9:
 267              		.cfi_def_cfa_offset 16
 268              		@ sp needed
 269 0036 70BD     		pop	{r4, r5, r6, pc}
 270              	.LVL15:
 271              	.L24:
 272              		.loc 1 69 1 view .LVU35
 273              		.align	2
 274              	.L23:
 275 0038 00000000 		.word	hspi1
 276              		.cfi_endproc
 277              	.LFE149:
 279              		.section	.text.nrf24_ReadReg,"ax",%progbits
 280              		.align	1
 281              		.global	nrf24_ReadReg
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	nrf24_ReadReg:
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 7


 287              	.LVL16:
 288              	.LFB150:
  70:../../CM7/Core/Src/NRF24L01.c **** 
  71:../../CM7/Core/Src/NRF24L01.c **** 
  72:../../CM7/Core/Src/NRF24L01.c **** uint8_t nrf24_ReadReg (uint8_t Reg)
  73:../../CM7/Core/Src/NRF24L01.c **** {
 289              		.loc 1 73 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 16
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		.loc 1 73 1 is_stmt 0 view .LVU37
 294 0000 10B5     		push	{r4, lr}
 295              	.LCFI10:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 299 0002 84B0     		sub	sp, sp, #16
 300              	.LCFI11:
 301              		.cfi_def_cfa_offset 24
 302 0004 8DF80700 		strb	r0, [sp, #7]
  74:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t data=0;
 303              		.loc 1 74 2 is_stmt 1 view .LVU38
 304              		.loc 1 74 10 is_stmt 0 view .LVU39
 305 0008 0023     		movs	r3, #0
 306 000a 8DF80F30 		strb	r3, [sp, #15]
  75:../../CM7/Core/Src/NRF24L01.c **** 
  76:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS Pin LOW to select the device
  77:../../CM7/Core/Src/NRF24L01.c **** 	CS_Select();
 307              		.loc 1 77 2 is_stmt 1 view .LVU40
 308 000e FFF7FEFF 		bl	CS_Select
 309              	.LVL17:
  78:../../CM7/Core/Src/NRF24L01.c **** 
  79:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, &Reg, 1, 100);
 310              		.loc 1 79 2 view .LVU41
 311 0012 0A4C     		ldr	r4, .L27
 312 0014 6423     		movs	r3, #100
 313 0016 0122     		movs	r2, #1
 314 0018 0DF10701 		add	r1, sp, #7
 315 001c 2046     		mov	r0, r4
 316 001e FFF7FEFF 		bl	HAL_SPI_Transmit
 317              	.LVL18:
  80:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Receive(NRF24_SPI, &data, 1, 100);
 318              		.loc 1 80 2 view .LVU42
 319 0022 6423     		movs	r3, #100
 320 0024 0122     		movs	r2, #1
 321 0026 0DF10F01 		add	r1, sp, #15
 322 002a 2046     		mov	r0, r4
 323 002c FFF7FEFF 		bl	HAL_SPI_Receive
 324              	.LVL19:
  81:../../CM7/Core/Src/NRF24L01.c **** 
  82:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS HIGH to release the device
  83:../../CM7/Core/Src/NRF24L01.c **** 	CS_UnSelect();
 325              		.loc 1 83 2 view .LVU43
 326 0030 FFF7FEFF 		bl	CS_UnSelect
 327              	.LVL20:
  84:../../CM7/Core/Src/NRF24L01.c **** 
  85:../../CM7/Core/Src/NRF24L01.c **** 	return data;
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 8


 328              		.loc 1 85 2 view .LVU44
  86:../../CM7/Core/Src/NRF24L01.c **** }
 329              		.loc 1 86 1 is_stmt 0 view .LVU45
 330 0034 9DF80F00 		ldrb	r0, [sp, #15]	@ zero_extendqisi2
 331 0038 04B0     		add	sp, sp, #16
 332              	.LCFI12:
 333              		.cfi_def_cfa_offset 8
 334              		@ sp needed
 335 003a 10BD     		pop	{r4, pc}
 336              	.L28:
 337              		.align	2
 338              	.L27:
 339 003c 00000000 		.word	hspi1
 340              		.cfi_endproc
 341              	.LFE150:
 343              		.section	.text.nrf24_ReadReg_Multi,"ax",%progbits
 344              		.align	1
 345              		.global	nrf24_ReadReg_Multi
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	nrf24_ReadReg_Multi:
 351              	.LVL21:
 352              	.LFB151:
  87:../../CM7/Core/Src/NRF24L01.c **** 
  88:../../CM7/Core/Src/NRF24L01.c **** 
  89:../../CM7/Core/Src/NRF24L01.c **** /* Read multiple bytes from the register */
  90:../../CM7/Core/Src/NRF24L01.c **** void nrf24_ReadReg_Multi (uint8_t Reg, uint8_t *data, int size)
  91:../../CM7/Core/Src/NRF24L01.c **** {
 353              		.loc 1 91 1 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 8
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		.loc 1 91 1 is_stmt 0 view .LVU47
 358 0000 70B5     		push	{r4, r5, r6, lr}
 359              	.LCFI13:
 360              		.cfi_def_cfa_offset 16
 361              		.cfi_offset 4, -16
 362              		.cfi_offset 5, -12
 363              		.cfi_offset 6, -8
 364              		.cfi_offset 14, -4
 365 0002 82B0     		sub	sp, sp, #8
 366              	.LCFI14:
 367              		.cfi_def_cfa_offset 24
 368 0004 0C46     		mov	r4, r1
 369 0006 1546     		mov	r5, r2
 370 0008 8DF80700 		strb	r0, [sp, #7]
  92:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS Pin LOW to select the device
  93:../../CM7/Core/Src/NRF24L01.c **** 	CS_Select();
 371              		.loc 1 93 2 is_stmt 1 view .LVU48
 372 000c FFF7FEFF 		bl	CS_Select
 373              	.LVL22:
  94:../../CM7/Core/Src/NRF24L01.c **** 
  95:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, &Reg, 1, 100);
 374              		.loc 1 95 2 view .LVU49
 375 0010 094E     		ldr	r6, .L31
 376 0012 6423     		movs	r3, #100
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 9


 377 0014 0122     		movs	r2, #1
 378 0016 0DF10701 		add	r1, sp, #7
 379 001a 3046     		mov	r0, r6
 380 001c FFF7FEFF 		bl	HAL_SPI_Transmit
 381              	.LVL23:
  96:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Receive(NRF24_SPI, data, size, 1000);
 382              		.loc 1 96 2 view .LVU50
 383 0020 4FF47A73 		mov	r3, #1000
 384 0024 AAB2     		uxth	r2, r5
 385 0026 2146     		mov	r1, r4
 386 0028 3046     		mov	r0, r6
 387 002a FFF7FEFF 		bl	HAL_SPI_Receive
 388              	.LVL24:
  97:../../CM7/Core/Src/NRF24L01.c **** 
  98:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS HIGH to release the device
  99:../../CM7/Core/Src/NRF24L01.c **** 	CS_UnSelect();
 389              		.loc 1 99 2 view .LVU51
 390 002e FFF7FEFF 		bl	CS_UnSelect
 391              	.LVL25:
 100:../../CM7/Core/Src/NRF24L01.c **** }
 392              		.loc 1 100 1 is_stmt 0 view .LVU52
 393 0032 02B0     		add	sp, sp, #8
 394              	.LCFI15:
 395              		.cfi_def_cfa_offset 16
 396              		@ sp needed
 397 0034 70BD     		pop	{r4, r5, r6, pc}
 398              	.LVL26:
 399              	.L32:
 400              		.loc 1 100 1 view .LVU53
 401 0036 00BF     		.align	2
 402              	.L31:
 403 0038 00000000 		.word	hspi1
 404              		.cfi_endproc
 405              	.LFE151:
 407              		.section	.text.nrfsendCmd,"ax",%progbits
 408              		.align	1
 409              		.global	nrfsendCmd
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 414              	nrfsendCmd:
 415              	.LVL27:
 416              	.LFB152:
 101:../../CM7/Core/Src/NRF24L01.c **** 
 102:../../CM7/Core/Src/NRF24L01.c **** 
 103:../../CM7/Core/Src/NRF24L01.c **** // send the command to the NRF
 104:../../CM7/Core/Src/NRF24L01.c **** void nrfsendCmd (uint8_t cmd)
 105:../../CM7/Core/Src/NRF24L01.c **** {
 417              		.loc 1 105 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		.loc 1 105 1 is_stmt 0 view .LVU55
 422 0000 00B5     		push	{lr}
 423              	.LCFI16:
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 14, -4
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 10


 426 0002 83B0     		sub	sp, sp, #12
 427              	.LCFI17:
 428              		.cfi_def_cfa_offset 16
 429 0004 8DF80700 		strb	r0, [sp, #7]
 106:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS Pin LOW to select the device
 107:../../CM7/Core/Src/NRF24L01.c **** 	CS_Select();
 430              		.loc 1 107 2 is_stmt 1 view .LVU56
 431 0008 FFF7FEFF 		bl	CS_Select
 432              	.LVL28:
 108:../../CM7/Core/Src/NRF24L01.c **** 
 109:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, &cmd, 1, 100);
 433              		.loc 1 109 2 view .LVU57
 434 000c 6423     		movs	r3, #100
 435 000e 0122     		movs	r2, #1
 436 0010 0DF10701 		add	r1, sp, #7
 437 0014 0348     		ldr	r0, .L35
 438 0016 FFF7FEFF 		bl	HAL_SPI_Transmit
 439              	.LVL29:
 110:../../CM7/Core/Src/NRF24L01.c **** 
 111:../../CM7/Core/Src/NRF24L01.c **** 	// Pull the CS HIGH to release the device
 112:../../CM7/Core/Src/NRF24L01.c **** 	CS_UnSelect();
 440              		.loc 1 112 2 view .LVU58
 441 001a FFF7FEFF 		bl	CS_UnSelect
 442              	.LVL30:
 113:../../CM7/Core/Src/NRF24L01.c **** }
 443              		.loc 1 113 1 is_stmt 0 view .LVU59
 444 001e 03B0     		add	sp, sp, #12
 445              	.LCFI18:
 446              		.cfi_def_cfa_offset 4
 447              		@ sp needed
 448 0020 5DF804FB 		ldr	pc, [sp], #4
 449              	.L36:
 450              		.align	2
 451              	.L35:
 452 0024 00000000 		.word	hspi1
 453              		.cfi_endproc
 454              	.LFE152:
 456              		.section	.rodata.nrf24_reset.str1.4,"aMS",%progbits,1
 457              		.align	2
 458              	.LC0:
 459 0000 E7E7E7E7 		.ascii	"\347\347\347\347\347\000"
 459      E700
 460 0006 0000     		.align	2
 461              	.LC1:
 462 0008 C2C2C2C2 		.ascii	"\302\302\302\302\302\000"
 462      C200
 463              		.section	.text.nrf24_reset,"ax",%progbits
 464              		.align	1
 465              		.global	nrf24_reset
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	nrf24_reset:
 471              	.LVL31:
 472              	.LFB153:
 114:../../CM7/Core/Src/NRF24L01.c **** 
 115:../../CM7/Core/Src/NRF24L01.c **** void nrf24_reset(uint8_t REG)
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 11


 116:../../CM7/Core/Src/NRF24L01.c **** {
 473              		.loc 1 116 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 24
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		.loc 1 116 1 is_stmt 0 view .LVU61
 478 0000 10B5     		push	{r4, lr}
 479              	.LCFI19:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 4, -8
 482              		.cfi_offset 14, -4
 483 0002 86B0     		sub	sp, sp, #24
 484              	.LCFI20:
 485              		.cfi_def_cfa_offset 32
 117:../../CM7/Core/Src/NRF24L01.c **** 	if (REG == STATUS)
 486              		.loc 1 117 2 is_stmt 1 view .LVU62
 487              		.loc 1 117 5 is_stmt 0 view .LVU63
 488 0004 0728     		cmp	r0, #7
 489 0006 00F08180 		beq	.L42
 118:../../CM7/Core/Src/NRF24L01.c **** 	{
 119:../../CM7/Core/Src/NRF24L01.c **** 		nrf24_WriteReg(STATUS, 0x00);
 120:../../CM7/Core/Src/NRF24L01.c **** 	}
 121:../../CM7/Core/Src/NRF24L01.c **** 
 122:../../CM7/Core/Src/NRF24L01.c **** 	else if (REG == FIFO_STATUS)
 490              		.loc 1 122 7 is_stmt 1 view .LVU64
 491              		.loc 1 122 10 is_stmt 0 view .LVU65
 492 000a 1728     		cmp	r0, #23
 493 000c 00F08280 		beq	.L43
 494              	.LBB2:
 123:../../CM7/Core/Src/NRF24L01.c **** 	{
 124:../../CM7/Core/Src/NRF24L01.c **** 		nrf24_WriteReg(FIFO_STATUS, 0x11);
 125:../../CM7/Core/Src/NRF24L01.c **** 	}
 126:../../CM7/Core/Src/NRF24L01.c **** 
 127:../../CM7/Core/Src/NRF24L01.c **** 	else {
 128:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(CONFIG, 0x08);
 495              		.loc 1 128 2 is_stmt 1 view .LVU66
 496 0010 0821     		movs	r1, #8
 497 0012 0020     		movs	r0, #0
 498              	.LVL32:
 499              		.loc 1 128 2 is_stmt 0 view .LVU67
 500 0014 FFF7FEFF 		bl	nrf24_WriteReg
 501              	.LVL33:
 129:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(EN_AA, 0x3F);
 502              		.loc 1 129 2 is_stmt 1 view .LVU68
 503 0018 3F21     		movs	r1, #63
 504 001a 0120     		movs	r0, #1
 505 001c FFF7FEFF 		bl	nrf24_WriteReg
 506              	.LVL34:
 130:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(EN_RXADDR, 0x03);
 507              		.loc 1 130 2 view .LVU69
 508 0020 0321     		movs	r1, #3
 509 0022 0220     		movs	r0, #2
 510 0024 FFF7FEFF 		bl	nrf24_WriteReg
 511              	.LVL35:
 131:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(SETUP_AW, 0x03);
 512              		.loc 1 131 2 view .LVU70
 513 0028 0321     		movs	r1, #3
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 12


 514 002a 0846     		mov	r0, r1
 515 002c FFF7FEFF 		bl	nrf24_WriteReg
 516              	.LVL36:
 132:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(SETUP_RETR, 0x03);
 517              		.loc 1 132 2 view .LVU71
 518 0030 0321     		movs	r1, #3
 519 0032 0420     		movs	r0, #4
 520 0034 FFF7FEFF 		bl	nrf24_WriteReg
 521              	.LVL37:
 133:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RF_CH, 0x02);
 522              		.loc 1 133 2 view .LVU72
 523 0038 0221     		movs	r1, #2
 524 003a 0520     		movs	r0, #5
 525 003c FFF7FEFF 		bl	nrf24_WriteReg
 526              	.LVL38:
 134:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RF_SETUP, 0x0E);
 527              		.loc 1 134 2 view .LVU73
 528 0040 0E21     		movs	r1, #14
 529 0042 0620     		movs	r0, #6
 530 0044 FFF7FEFF 		bl	nrf24_WriteReg
 531              	.LVL39:
 135:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(STATUS, 0x00);
 532              		.loc 1 135 2 view .LVU74
 533 0048 0021     		movs	r1, #0
 534 004a 0720     		movs	r0, #7
 535 004c FFF7FEFF 		bl	nrf24_WriteReg
 536              	.LVL40:
 136:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(OBSERVE_TX, 0x00);
 537              		.loc 1 136 2 view .LVU75
 538 0050 0021     		movs	r1, #0
 539 0052 0820     		movs	r0, #8
 540 0054 FFF7FEFF 		bl	nrf24_WriteReg
 541              	.LVL41:
 137:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(CD, 0x00);
 542              		.loc 1 137 2 view .LVU76
 543 0058 0021     		movs	r1, #0
 544 005a 0920     		movs	r0, #9
 545 005c FFF7FEFF 		bl	nrf24_WriteReg
 546              	.LVL42:
 138:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t rx_addr_p0_def[5] = {0xE7, 0xE7, 0xE7, 0xE7, 0xE7};
 547              		.loc 1 138 2 view .LVU77
 548              		.loc 1 138 10 is_stmt 0 view .LVU78
 549 0060 2E4C     		ldr	r4, .L44
 550 0062 94E80300 		ldm	r4, {r0, r1}
 551 0066 0090     		str	r0, [sp]
 552 0068 8DF80410 		strb	r1, [sp, #4]
 139:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteRegMulti(RX_ADDR_P0, rx_addr_p0_def, 5);
 553              		.loc 1 139 2 is_stmt 1 view .LVU79
 554 006c 0522     		movs	r2, #5
 555 006e 6946     		mov	r1, sp
 556 0070 0A20     		movs	r0, #10
 557 0072 FFF7FEFF 		bl	nrf24_WriteRegMulti
 558              	.LVL43:
 140:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t rx_addr_p1_def[5] = {0xC2, 0xC2, 0xC2, 0xC2, 0xC2};
 559              		.loc 1 140 2 view .LVU80
 560              		.loc 1 140 10 is_stmt 0 view .LVU81
 561 0076 2A4B     		ldr	r3, .L44+4
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 13


 562 0078 93E80300 		ldm	r3, {r0, r1}
 563 007c 0290     		str	r0, [sp, #8]
 564 007e 8DF80C10 		strb	r1, [sp, #12]
 141:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteRegMulti(RX_ADDR_P1, rx_addr_p1_def, 5);
 565              		.loc 1 141 2 is_stmt 1 view .LVU82
 566 0082 0522     		movs	r2, #5
 567 0084 02A9     		add	r1, sp, #8
 568 0086 0B20     		movs	r0, #11
 569 0088 FFF7FEFF 		bl	nrf24_WriteRegMulti
 570              	.LVL44:
 142:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_ADDR_P2, 0xC3);
 571              		.loc 1 142 2 view .LVU83
 572 008c C321     		movs	r1, #195
 573 008e 0C20     		movs	r0, #12
 574 0090 FFF7FEFF 		bl	nrf24_WriteReg
 575              	.LVL45:
 143:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_ADDR_P3, 0xC4);
 576              		.loc 1 143 2 view .LVU84
 577 0094 C421     		movs	r1, #196
 578 0096 0D20     		movs	r0, #13
 579 0098 FFF7FEFF 		bl	nrf24_WriteReg
 580              	.LVL46:
 144:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_ADDR_P4, 0xC5);
 581              		.loc 1 144 2 view .LVU85
 582 009c C521     		movs	r1, #197
 583 009e 0E20     		movs	r0, #14
 584 00a0 FFF7FEFF 		bl	nrf24_WriteReg
 585              	.LVL47:
 145:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_ADDR_P5, 0xC6);
 586              		.loc 1 145 2 view .LVU86
 587 00a4 C621     		movs	r1, #198
 588 00a6 0F20     		movs	r0, #15
 589 00a8 FFF7FEFF 		bl	nrf24_WriteReg
 590              	.LVL48:
 146:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t tx_addr_def[5] = {0xE7, 0xE7, 0xE7, 0xE7, 0xE7};
 591              		.loc 1 146 2 view .LVU87
 592              		.loc 1 146 10 is_stmt 0 view .LVU88
 593 00ac 94E80300 		ldm	r4, {r0, r1}
 594 00b0 0490     		str	r0, [sp, #16]
 595 00b2 8DF81410 		strb	r1, [sp, #20]
 147:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteRegMulti(TX_ADDR, tx_addr_def, 5);
 596              		.loc 1 147 2 is_stmt 1 view .LVU89
 597 00b6 0522     		movs	r2, #5
 598 00b8 04A9     		add	r1, sp, #16
 599 00ba 1020     		movs	r0, #16
 600 00bc FFF7FEFF 		bl	nrf24_WriteRegMulti
 601              	.LVL49:
 148:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_PW_P0, 0);
 602              		.loc 1 148 2 view .LVU90
 603 00c0 0021     		movs	r1, #0
 604 00c2 1120     		movs	r0, #17
 605 00c4 FFF7FEFF 		bl	nrf24_WriteReg
 606              	.LVL50:
 149:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_PW_P1, 0);
 607              		.loc 1 149 2 view .LVU91
 608 00c8 0021     		movs	r1, #0
 609 00ca 1220     		movs	r0, #18
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 14


 610 00cc FFF7FEFF 		bl	nrf24_WriteReg
 611              	.LVL51:
 150:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_PW_P2, 0);
 612              		.loc 1 150 2 view .LVU92
 613 00d0 0021     		movs	r1, #0
 614 00d2 1320     		movs	r0, #19
 615 00d4 FFF7FEFF 		bl	nrf24_WriteReg
 616              	.LVL52:
 151:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_PW_P3, 0);
 617              		.loc 1 151 2 view .LVU93
 618 00d8 0021     		movs	r1, #0
 619 00da 1420     		movs	r0, #20
 620 00dc FFF7FEFF 		bl	nrf24_WriteReg
 621              	.LVL53:
 152:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_PW_P4, 0);
 622              		.loc 1 152 2 view .LVU94
 623 00e0 0021     		movs	r1, #0
 624 00e2 1520     		movs	r0, #21
 625 00e4 FFF7FEFF 		bl	nrf24_WriteReg
 626              	.LVL54:
 153:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_PW_P5, 0);
 627              		.loc 1 153 2 view .LVU95
 628 00e8 0021     		movs	r1, #0
 629 00ea 1620     		movs	r0, #22
 630 00ec FFF7FEFF 		bl	nrf24_WriteReg
 631              	.LVL55:
 154:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(FIFO_STATUS, 0x11);
 632              		.loc 1 154 2 view .LVU96
 633 00f0 1121     		movs	r1, #17
 634 00f2 1720     		movs	r0, #23
 635 00f4 FFF7FEFF 		bl	nrf24_WriteReg
 636              	.LVL56:
 155:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(DYNPD, 0);
 637              		.loc 1 155 2 view .LVU97
 638 00f8 0021     		movs	r1, #0
 639 00fa 1C20     		movs	r0, #28
 640 00fc FFF7FEFF 		bl	nrf24_WriteReg
 641              	.LVL57:
 156:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(FEATURE, 0);
 642              		.loc 1 156 2 view .LVU98
 643 0100 0021     		movs	r1, #0
 644 0102 1D20     		movs	r0, #29
 645 0104 FFF7FEFF 		bl	nrf24_WriteReg
 646              	.LVL58:
 647              	.L37:
 648              	.LBE2:
 157:../../CM7/Core/Src/NRF24L01.c **** 	}
 158:../../CM7/Core/Src/NRF24L01.c **** }
 649              		.loc 1 158 1 is_stmt 0 view .LVU99
 650 0108 06B0     		add	sp, sp, #24
 651              	.LCFI21:
 652              		.cfi_remember_state
 653              		.cfi_def_cfa_offset 8
 654              		@ sp needed
 655 010a 10BD     		pop	{r4, pc}
 656              	.LVL59:
 657              	.L42:
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 15


 658              	.LCFI22:
 659              		.cfi_restore_state
 119:../../CM7/Core/Src/NRF24L01.c **** 	}
 660              		.loc 1 119 3 is_stmt 1 view .LVU100
 661 010c 0021     		movs	r1, #0
 662 010e FFF7FEFF 		bl	nrf24_WriteReg
 663              	.LVL60:
 119:../../CM7/Core/Src/NRF24L01.c **** 	}
 664              		.loc 1 119 3 is_stmt 0 view .LVU101
 665 0112 F9E7     		b	.L37
 666              	.LVL61:
 667              	.L43:
 124:../../CM7/Core/Src/NRF24L01.c **** 	}
 668              		.loc 1 124 3 is_stmt 1 view .LVU102
 669 0114 1121     		movs	r1, #17
 670 0116 FFF7FEFF 		bl	nrf24_WriteReg
 671              	.LVL62:
 124:../../CM7/Core/Src/NRF24L01.c **** 	}
 672              		.loc 1 124 3 is_stmt 0 view .LVU103
 673 011a F5E7     		b	.L37
 674              	.L45:
 675              		.align	2
 676              	.L44:
 677 011c 00000000 		.word	.LC0
 678 0120 08000000 		.word	.LC1
 679              		.cfi_endproc
 680              	.LFE153:
 682              		.section	.text.NRF24_Init,"ax",%progbits
 683              		.align	1
 684              		.global	NRF24_Init
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 689              	NRF24_Init:
 690              	.LFB154:
 159:../../CM7/Core/Src/NRF24L01.c **** 
 160:../../CM7/Core/Src/NRF24L01.c **** 
 161:../../CM7/Core/Src/NRF24L01.c **** 
 162:../../CM7/Core/Src/NRF24L01.c **** 
 163:../../CM7/Core/Src/NRF24L01.c **** void NRF24_Init (void)
 164:../../CM7/Core/Src/NRF24L01.c **** {
 691              		.loc 1 164 1 is_stmt 1 view -0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 0, uses_anonymous_args = 0
 695 0000 08B5     		push	{r3, lr}
 696              	.LCFI23:
 697              		.cfi_def_cfa_offset 8
 698              		.cfi_offset 3, -8
 699              		.cfi_offset 14, -4
 165:../../CM7/Core/Src/NRF24L01.c **** 	// disable the chip before configuring the device
 166:../../CM7/Core/Src/NRF24L01.c **** 	CE_Disable();
 700              		.loc 1 166 2 view .LVU105
 701 0002 FFF7FEFF 		bl	CE_Disable
 702              	.LVL63:
 167:../../CM7/Core/Src/NRF24L01.c **** 
 168:../../CM7/Core/Src/NRF24L01.c **** 
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 16


 169:../../CM7/Core/Src/NRF24L01.c **** 	// reset everything
 170:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_reset (0);
 703              		.loc 1 170 2 view .LVU106
 704 0006 0020     		movs	r0, #0
 705 0008 FFF7FEFF 		bl	nrf24_reset
 706              	.LVL64:
 171:../../CM7/Core/Src/NRF24L01.c **** 
 172:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(CONFIG, 0);  // will be configured later
 707              		.loc 1 172 2 view .LVU107
 708 000c 0021     		movs	r1, #0
 709 000e 0846     		mov	r0, r1
 710 0010 FFF7FEFF 		bl	nrf24_WriteReg
 711              	.LVL65:
 173:../../CM7/Core/Src/NRF24L01.c **** 
 174:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(EN_AA, 0);  // No Auto ACK
 712              		.loc 1 174 2 view .LVU108
 713 0014 0021     		movs	r1, #0
 714 0016 0120     		movs	r0, #1
 715 0018 FFF7FEFF 		bl	nrf24_WriteReg
 716              	.LVL66:
 175:../../CM7/Core/Src/NRF24L01.c **** 
 176:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (EN_RXADDR, 0);  // Not Enabling any data pipe right now
 717              		.loc 1 176 2 view .LVU109
 718 001c 0021     		movs	r1, #0
 719 001e 0220     		movs	r0, #2
 720 0020 FFF7FEFF 		bl	nrf24_WriteReg
 721              	.LVL67:
 177:../../CM7/Core/Src/NRF24L01.c **** 
 178:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (SETUP_AW, 0x03);  // 5 Bytes for the TX/RX address
 722              		.loc 1 178 2 view .LVU110
 723 0024 0321     		movs	r1, #3
 724 0026 0846     		mov	r0, r1
 725 0028 FFF7FEFF 		bl	nrf24_WriteReg
 726              	.LVL68:
 179:../../CM7/Core/Src/NRF24L01.c **** 
 180:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (SETUP_RETR, 0);   // No retransmission
 727              		.loc 1 180 2 view .LVU111
 728 002c 0021     		movs	r1, #0
 729 002e 0420     		movs	r0, #4
 730 0030 FFF7FEFF 		bl	nrf24_WriteReg
 731              	.LVL69:
 181:../../CM7/Core/Src/NRF24L01.c **** 
 182:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (RF_CH, 0);  // will be setup during Tx or RX
 732              		.loc 1 182 2 view .LVU112
 733 0034 0021     		movs	r1, #0
 734 0036 0520     		movs	r0, #5
 735 0038 FFF7FEFF 		bl	nrf24_WriteReg
 736              	.LVL70:
 183:../../CM7/Core/Src/NRF24L01.c **** 
 184:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (RF_SETUP, 0x0E);   // Power= 0db, data rate = 2Mbps
 737              		.loc 1 184 2 view .LVU113
 738 003c 0E21     		movs	r1, #14
 739 003e 0620     		movs	r0, #6
 740 0040 FFF7FEFF 		bl	nrf24_WriteReg
 741              	.LVL71:
 185:../../CM7/Core/Src/NRF24L01.c **** 
 186:../../CM7/Core/Src/NRF24L01.c **** 	// Enable the chip after configuring the device
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 17


 187:../../CM7/Core/Src/NRF24L01.c **** 	CE_Enable();
 742              		.loc 1 187 2 view .LVU114
 743 0044 FFF7FEFF 		bl	CE_Enable
 744              	.LVL72:
 188:../../CM7/Core/Src/NRF24L01.c **** 
 189:../../CM7/Core/Src/NRF24L01.c **** }
 745              		.loc 1 189 1 is_stmt 0 view .LVU115
 746 0048 08BD     		pop	{r3, pc}
 747              		.cfi_endproc
 748              	.LFE154:
 750              		.section	.text.NRF24_TxMode,"ax",%progbits
 751              		.align	1
 752              		.global	NRF24_TxMode
 753              		.syntax unified
 754              		.thumb
 755              		.thumb_func
 757              	NRF24_TxMode:
 758              	.LVL73:
 759              	.LFB155:
 190:../../CM7/Core/Src/NRF24L01.c **** 
 191:../../CM7/Core/Src/NRF24L01.c **** 
 192:../../CM7/Core/Src/NRF24L01.c **** // set up the Tx mode
 193:../../CM7/Core/Src/NRF24L01.c **** 
 194:../../CM7/Core/Src/NRF24L01.c **** void NRF24_TxMode (uint8_t *Address, uint8_t channel)
 195:../../CM7/Core/Src/NRF24L01.c **** {
 760              		.loc 1 195 1 is_stmt 1 view -0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 0
 763              		@ frame_needed = 0, uses_anonymous_args = 0
 764              		.loc 1 195 1 is_stmt 0 view .LVU117
 765 0000 38B5     		push	{r3, r4, r5, lr}
 766              	.LCFI24:
 767              		.cfi_def_cfa_offset 16
 768              		.cfi_offset 3, -16
 769              		.cfi_offset 4, -12
 770              		.cfi_offset 5, -8
 771              		.cfi_offset 14, -4
 772 0002 0446     		mov	r4, r0
 773 0004 0D46     		mov	r5, r1
 196:../../CM7/Core/Src/NRF24L01.c **** 	// disable the chip before configuring the device
 197:../../CM7/Core/Src/NRF24L01.c **** 	CE_Disable();
 774              		.loc 1 197 2 is_stmt 1 view .LVU118
 775 0006 FFF7FEFF 		bl	CE_Disable
 776              	.LVL74:
 198:../../CM7/Core/Src/NRF24L01.c **** 
 199:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (RF_CH, channel);  // select the channel
 777              		.loc 1 199 2 view .LVU119
 778 000a 2946     		mov	r1, r5
 779 000c 0520     		movs	r0, #5
 780 000e FFF7FEFF 		bl	nrf24_WriteReg
 781              	.LVL75:
 200:../../CM7/Core/Src/NRF24L01.c **** 
 201:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteRegMulti(TX_ADDR, Address, 5);  // Write the TX address
 782              		.loc 1 201 2 view .LVU120
 783 0012 0522     		movs	r2, #5
 784 0014 2146     		mov	r1, r4
 785 0016 1020     		movs	r0, #16
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 18


 786 0018 FFF7FEFF 		bl	nrf24_WriteRegMulti
 787              	.LVL76:
 202:../../CM7/Core/Src/NRF24L01.c **** 
 203:../../CM7/Core/Src/NRF24L01.c **** 
 204:../../CM7/Core/Src/NRF24L01.c **** 	// power up the device
 205:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t config = nrf24_ReadReg(CONFIG);
 788              		.loc 1 205 2 view .LVU121
 789              		.loc 1 205 19 is_stmt 0 view .LVU122
 790 001c 0020     		movs	r0, #0
 791 001e FFF7FEFF 		bl	nrf24_ReadReg
 792              	.LVL77:
 206:../../CM7/Core/Src/NRF24L01.c **** //	config = config | (1<<1);   // write 1 in the PWR_UP bit
 207:../../CM7/Core/Src/NRF24L01.c **** 	config = config & (0xF2);    // write 0 in the PRIM_RX, and 1 in the PWR_UP, and all other bits ar
 793              		.loc 1 207 2 is_stmt 1 view .LVU123
 208:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (CONFIG, config);
 794              		.loc 1 208 2 view .LVU124
 795 0022 00F0F201 		and	r1, r0, #242
 796 0026 0020     		movs	r0, #0
 797              	.LVL78:
 798              		.loc 1 208 2 is_stmt 0 view .LVU125
 799 0028 FFF7FEFF 		bl	nrf24_WriteReg
 800              	.LVL79:
 209:../../CM7/Core/Src/NRF24L01.c **** 
 210:../../CM7/Core/Src/NRF24L01.c **** 	// Enable the chip after configuring the device
 211:../../CM7/Core/Src/NRF24L01.c **** 	CE_Enable();
 801              		.loc 1 211 2 is_stmt 1 view .LVU126
 802 002c FFF7FEFF 		bl	CE_Enable
 803              	.LVL80:
 212:../../CM7/Core/Src/NRF24L01.c **** }
 804              		.loc 1 212 1 is_stmt 0 view .LVU127
 805 0030 38BD     		pop	{r3, r4, r5, pc}
 806              		.loc 1 212 1 view .LVU128
 807              		.cfi_endproc
 808              	.LFE155:
 810              		.section	.text.NRF24_Transmit,"ax",%progbits
 811              		.align	1
 812              		.global	NRF24_Transmit
 813              		.syntax unified
 814              		.thumb
 815              		.thumb_func
 817              	NRF24_Transmit:
 818              	.LVL81:
 819              	.LFB156:
 213:../../CM7/Core/Src/NRF24L01.c **** 
 214:../../CM7/Core/Src/NRF24L01.c **** 
 215:../../CM7/Core/Src/NRF24L01.c **** // transmit the data
 216:../../CM7/Core/Src/NRF24L01.c **** 
 217:../../CM7/Core/Src/NRF24L01.c **** uint8_t NRF24_Transmit (uint8_t *data)
 218:../../CM7/Core/Src/NRF24L01.c **** {
 820              		.loc 1 218 1 is_stmt 1 view -0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 8
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              		.loc 1 218 1 is_stmt 0 view .LVU130
 825 0000 30B5     		push	{r4, r5, lr}
 826              	.LCFI25:
 827              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 19


 828              		.cfi_offset 4, -12
 829              		.cfi_offset 5, -8
 830              		.cfi_offset 14, -4
 831 0002 83B0     		sub	sp, sp, #12
 832              	.LCFI26:
 833              		.cfi_def_cfa_offset 24
 834 0004 0446     		mov	r4, r0
 219:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t cmdtosend = 0;
 835              		.loc 1 219 2 is_stmt 1 view .LVU131
 836              		.loc 1 219 10 is_stmt 0 view .LVU132
 837 0006 0023     		movs	r3, #0
 838 0008 8DF80730 		strb	r3, [sp, #7]
 220:../../CM7/Core/Src/NRF24L01.c **** 
 221:../../CM7/Core/Src/NRF24L01.c **** 	// select the device
 222:../../CM7/Core/Src/NRF24L01.c **** 	CS_Select();
 839              		.loc 1 222 2 is_stmt 1 view .LVU133
 840 000c FFF7FEFF 		bl	CS_Select
 841              	.LVL82:
 223:../../CM7/Core/Src/NRF24L01.c **** 
 224:../../CM7/Core/Src/NRF24L01.c **** 	// payload command
 225:../../CM7/Core/Src/NRF24L01.c **** 	cmdtosend = W_TX_PAYLOAD;
 842              		.loc 1 225 2 view .LVU134
 843              		.loc 1 225 12 is_stmt 0 view .LVU135
 844 0010 A023     		movs	r3, #160
 845 0012 8DF80730 		strb	r3, [sp, #7]
 226:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, &cmdtosend, 1, 100);
 846              		.loc 1 226 2 is_stmt 1 view .LVU136
 847 0016 144D     		ldr	r5, .L55
 848 0018 6423     		movs	r3, #100
 849 001a 0122     		movs	r2, #1
 850 001c 0DF10701 		add	r1, sp, #7
 851 0020 2846     		mov	r0, r5
 852 0022 FFF7FEFF 		bl	HAL_SPI_Transmit
 853              	.LVL83:
 227:../../CM7/Core/Src/NRF24L01.c **** 
 228:../../CM7/Core/Src/NRF24L01.c **** 	// send the payload
 229:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, data, 32, 1000);
 854              		.loc 1 229 2 view .LVU137
 855 0026 4FF47A73 		mov	r3, #1000
 856 002a 2022     		movs	r2, #32
 857 002c 2146     		mov	r1, r4
 858 002e 2846     		mov	r0, r5
 859 0030 FFF7FEFF 		bl	HAL_SPI_Transmit
 860              	.LVL84:
 230:../../CM7/Core/Src/NRF24L01.c **** 
 231:../../CM7/Core/Src/NRF24L01.c **** 	// Unselect the device
 232:../../CM7/Core/Src/NRF24L01.c **** 	CS_UnSelect();
 861              		.loc 1 232 2 view .LVU138
 862 0034 FFF7FEFF 		bl	CS_UnSelect
 863              	.LVL85:
 233:../../CM7/Core/Src/NRF24L01.c **** 
 234:../../CM7/Core/Src/NRF24L01.c **** 	HAL_Delay(1);
 864              		.loc 1 234 2 view .LVU139
 865 0038 0120     		movs	r0, #1
 866 003a FFF7FEFF 		bl	HAL_Delay
 867              	.LVL86:
 235:../../CM7/Core/Src/NRF24L01.c **** 
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 20


 236:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t fifostatus = nrf24_ReadReg(FIFO_STATUS);
 868              		.loc 1 236 2 view .LVU140
 869              		.loc 1 236 23 is_stmt 0 view .LVU141
 870 003e 1720     		movs	r0, #23
 871 0040 FFF7FEFF 		bl	nrf24_ReadReg
 872              	.LVL87:
 237:../../CM7/Core/Src/NRF24L01.c **** 
 238:../../CM7/Core/Src/NRF24L01.c **** 	// check the fourth bit of FIFO_STATUS to know if the TX fifo is empty
 239:../../CM7/Core/Src/NRF24L01.c **** 	if ((fifostatus&(1<<4)) && (!(fifostatus&(1<<3))))
 873              		.loc 1 239 2 is_stmt 1 view .LVU142
 874              		.loc 1 239 5 is_stmt 0 view .LVU143
 875 0044 00F01800 		and	r0, r0, #24
 876              	.LVL88:
 877              		.loc 1 239 5 view .LVU144
 878 0048 1028     		cmp	r0, #16
 879 004a 02D0     		beq	.L54
 240:../../CM7/Core/Src/NRF24L01.c **** 	{
 241:../../CM7/Core/Src/NRF24L01.c **** 		cmdtosend = FLUSH_TX;
 242:../../CM7/Core/Src/NRF24L01.c **** 		nrfsendCmd(cmdtosend);
 243:../../CM7/Core/Src/NRF24L01.c **** 
 244:../../CM7/Core/Src/NRF24L01.c **** 		// reset FIFO_STATUS
 245:../../CM7/Core/Src/NRF24L01.c **** 		nrf24_reset (FIFO_STATUS);
 246:../../CM7/Core/Src/NRF24L01.c **** 
 247:../../CM7/Core/Src/NRF24L01.c **** 		return 1;
 248:../../CM7/Core/Src/NRF24L01.c **** 	}
 249:../../CM7/Core/Src/NRF24L01.c **** 
 250:../../CM7/Core/Src/NRF24L01.c **** 	return 0;
 880              		.loc 1 250 9 view .LVU145
 881 004c 0020     		movs	r0, #0
 882              	.L51:
 251:../../CM7/Core/Src/NRF24L01.c **** }
 883              		.loc 1 251 1 view .LVU146
 884 004e 03B0     		add	sp, sp, #12
 885              	.LCFI27:
 886              		.cfi_remember_state
 887              		.cfi_def_cfa_offset 12
 888              		@ sp needed
 889 0050 30BD     		pop	{r4, r5, pc}
 890              	.LVL89:
 891              	.L54:
 892              	.LCFI28:
 893              		.cfi_restore_state
 241:../../CM7/Core/Src/NRF24L01.c **** 		nrfsendCmd(cmdtosend);
 894              		.loc 1 241 3 is_stmt 1 view .LVU147
 241:../../CM7/Core/Src/NRF24L01.c **** 		nrfsendCmd(cmdtosend);
 895              		.loc 1 241 13 is_stmt 0 view .LVU148
 896 0052 E120     		movs	r0, #225
 897 0054 8DF80700 		strb	r0, [sp, #7]
 242:../../CM7/Core/Src/NRF24L01.c **** 
 898              		.loc 1 242 3 is_stmt 1 view .LVU149
 899 0058 FFF7FEFF 		bl	nrfsendCmd
 900              	.LVL90:
 245:../../CM7/Core/Src/NRF24L01.c **** 
 901              		.loc 1 245 3 view .LVU150
 902 005c 1720     		movs	r0, #23
 903 005e FFF7FEFF 		bl	nrf24_reset
 904              	.LVL91:
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 21


 247:../../CM7/Core/Src/NRF24L01.c **** 	}
 905              		.loc 1 247 3 view .LVU151
 247:../../CM7/Core/Src/NRF24L01.c **** 	}
 906              		.loc 1 247 10 is_stmt 0 view .LVU152
 907 0062 0120     		movs	r0, #1
 908 0064 F3E7     		b	.L51
 909              	.L56:
 910 0066 00BF     		.align	2
 911              	.L55:
 912 0068 00000000 		.word	hspi1
 913              		.cfi_endproc
 914              	.LFE156:
 916              		.section	.text.NRF24_RxMode,"ax",%progbits
 917              		.align	1
 918              		.global	NRF24_RxMode
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 923              	NRF24_RxMode:
 924              	.LVL92:
 925              	.LFB157:
 252:../../CM7/Core/Src/NRF24L01.c **** 
 253:../../CM7/Core/Src/NRF24L01.c **** 
 254:../../CM7/Core/Src/NRF24L01.c **** void NRF24_RxMode (uint8_t *Address, uint8_t channel)
 255:../../CM7/Core/Src/NRF24L01.c **** {
 926              		.loc 1 255 1 is_stmt 1 view -0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 0
 929              		@ frame_needed = 0, uses_anonymous_args = 0
 930              		.loc 1 255 1 is_stmt 0 view .LVU154
 931 0000 38B5     		push	{r3, r4, r5, lr}
 932              	.LCFI29:
 933              		.cfi_def_cfa_offset 16
 934              		.cfi_offset 3, -16
 935              		.cfi_offset 4, -12
 936              		.cfi_offset 5, -8
 937              		.cfi_offset 14, -4
 938 0002 0446     		mov	r4, r0
 939 0004 0D46     		mov	r5, r1
 256:../../CM7/Core/Src/NRF24L01.c **** 	// disable the chip before configuring the device
 257:../../CM7/Core/Src/NRF24L01.c **** 	CE_Disable();
 940              		.loc 1 257 2 is_stmt 1 view .LVU155
 941 0006 FFF7FEFF 		bl	CE_Disable
 942              	.LVL93:
 258:../../CM7/Core/Src/NRF24L01.c **** 
 259:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_reset (STATUS);
 943              		.loc 1 259 2 view .LVU156
 944 000a 0720     		movs	r0, #7
 945 000c FFF7FEFF 		bl	nrf24_reset
 946              	.LVL94:
 260:../../CM7/Core/Src/NRF24L01.c **** 
 261:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (RF_CH, channel);  // select the channel
 947              		.loc 1 261 2 view .LVU157
 948 0010 2946     		mov	r1, r5
 949 0012 0520     		movs	r0, #5
 950 0014 FFF7FEFF 		bl	nrf24_WriteReg
 951              	.LVL95:
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 22


 262:../../CM7/Core/Src/NRF24L01.c **** 
 263:../../CM7/Core/Src/NRF24L01.c **** 	// select data pipe 2
 264:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t en_rxaddr = nrf24_ReadReg(EN_RXADDR);
 952              		.loc 1 264 2 view .LVU158
 953              		.loc 1 264 22 is_stmt 0 view .LVU159
 954 0018 0220     		movs	r0, #2
 955 001a FFF7FEFF 		bl	nrf24_ReadReg
 956              	.LVL96:
 265:../../CM7/Core/Src/NRF24L01.c **** 	en_rxaddr = en_rxaddr | (1<<2);
 957              		.loc 1 265 2 is_stmt 1 view .LVU160
 958              		.loc 1 265 12 is_stmt 0 view .LVU161
 959 001e 40F00401 		orr	r1, r0, #4
 960              	.LVL97:
 266:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (EN_RXADDR, en_rxaddr);
 961              		.loc 1 266 2 is_stmt 1 view .LVU162
 962 0022 C9B2     		uxtb	r1, r1
 963              		.loc 1 266 2 is_stmt 0 view .LVU163
 964 0024 0220     		movs	r0, #2
 965 0026 FFF7FEFF 		bl	nrf24_WriteReg
 966              	.LVL98:
 267:../../CM7/Core/Src/NRF24L01.c **** 
 268:../../CM7/Core/Src/NRF24L01.c **** 	/* We must write the address for Data Pipe 1, if we want to use any pipe from 2 to 5
 269:../../CM7/Core/Src/NRF24L01.c **** 	 * The Address from DATA Pipe 2 to Data Pipe 5 differs only in the LSB
 270:../../CM7/Core/Src/NRF24L01.c **** 	 * Their 4 MSB Bytes will still be same as Data Pipe 1
 271:../../CM7/Core/Src/NRF24L01.c **** 	 *
 272:../../CM7/Core/Src/NRF24L01.c **** 	 * For Eg->
 273:../../CM7/Core/Src/NRF24L01.c **** 	 * Pipe 1 ADDR = 0xAABBCCDD11
 274:../../CM7/Core/Src/NRF24L01.c **** 	 * Pipe 2 ADDR = 0xAABBCCDD22
 275:../../CM7/Core/Src/NRF24L01.c **** 	 * Pipe 3 ADDR = 0xAABBCCDD33
 276:../../CM7/Core/Src/NRF24L01.c **** 	 *
 277:../../CM7/Core/Src/NRF24L01.c **** 	 */
 278:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteRegMulti(RX_ADDR_P1, Address, 5);  // Write the Pipe1 address
 967              		.loc 1 278 2 is_stmt 1 view .LVU164
 968 002a 0522     		movs	r2, #5
 969 002c 2146     		mov	r1, r4
 970 002e 0B20     		movs	r0, #11
 971 0030 FFF7FEFF 		bl	nrf24_WriteRegMulti
 972              	.LVL99:
 279:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg(RX_ADDR_P2, 0xEE);  // Write the Pipe2 LSB address
 973              		.loc 1 279 2 view .LVU165
 974 0034 EE21     		movs	r1, #238
 975 0036 0C20     		movs	r0, #12
 976 0038 FFF7FEFF 		bl	nrf24_WriteReg
 977              	.LVL100:
 280:../../CM7/Core/Src/NRF24L01.c **** 
 281:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (RX_PW_P2, 32);   // 32 bit payload size for pipe 2
 978              		.loc 1 281 2 view .LVU166
 979 003c 2021     		movs	r1, #32
 980 003e 1320     		movs	r0, #19
 981 0040 FFF7FEFF 		bl	nrf24_WriteReg
 982              	.LVL101:
 282:../../CM7/Core/Src/NRF24L01.c **** 
 283:../../CM7/Core/Src/NRF24L01.c **** 
 284:../../CM7/Core/Src/NRF24L01.c **** 	// power up the device in Rx mode
 285:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t config = nrf24_ReadReg(CONFIG);
 983              		.loc 1 285 2 view .LVU167
 984              		.loc 1 285 19 is_stmt 0 view .LVU168
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 23


 985 0044 0020     		movs	r0, #0
 986 0046 FFF7FEFF 		bl	nrf24_ReadReg
 987              	.LVL102:
 286:../../CM7/Core/Src/NRF24L01.c **** 	config = config | (1<<1) | (1<<0);
 988              		.loc 1 286 2 is_stmt 1 view .LVU169
 989              		.loc 1 286 9 is_stmt 0 view .LVU170
 990 004a 40F00301 		orr	r1, r0, #3
 991              	.LVL103:
 287:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_WriteReg (CONFIG, config);
 992              		.loc 1 287 2 is_stmt 1 view .LVU171
 993 004e C9B2     		uxtb	r1, r1
 994              		.loc 1 287 2 is_stmt 0 view .LVU172
 995 0050 0020     		movs	r0, #0
 996 0052 FFF7FEFF 		bl	nrf24_WriteReg
 997              	.LVL104:
 288:../../CM7/Core/Src/NRF24L01.c **** 
 289:../../CM7/Core/Src/NRF24L01.c **** 	// Enable the chip after configuring the device
 290:../../CM7/Core/Src/NRF24L01.c **** 	CE_Enable();
 998              		.loc 1 290 2 is_stmt 1 view .LVU173
 999 0056 FFF7FEFF 		bl	CE_Enable
 1000              	.LVL105:
 291:../../CM7/Core/Src/NRF24L01.c **** }
 1001              		.loc 1 291 1 is_stmt 0 view .LVU174
 1002 005a 38BD     		pop	{r3, r4, r5, pc}
 1003              		.loc 1 291 1 view .LVU175
 1004              		.cfi_endproc
 1005              	.LFE157:
 1007              		.section	.text.isDataAvailable,"ax",%progbits
 1008              		.align	1
 1009              		.global	isDataAvailable
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1014              	isDataAvailable:
 1015              	.LVL106:
 1016              	.LFB158:
 292:../../CM7/Core/Src/NRF24L01.c **** 
 293:../../CM7/Core/Src/NRF24L01.c **** 
 294:../../CM7/Core/Src/NRF24L01.c **** uint8_t isDataAvailable (int pipenum)
 295:../../CM7/Core/Src/NRF24L01.c **** {
 1017              		.loc 1 295 1 is_stmt 1 view -0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021              		.loc 1 295 1 is_stmt 0 view .LVU177
 1022 0000 10B5     		push	{r4, lr}
 1023              	.LCFI30:
 1024              		.cfi_def_cfa_offset 8
 1025              		.cfi_offset 4, -8
 1026              		.cfi_offset 14, -4
 1027 0002 0446     		mov	r4, r0
 296:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t status = nrf24_ReadReg(STATUS);
 1028              		.loc 1 296 2 is_stmt 1 view .LVU178
 1029              		.loc 1 296 19 is_stmt 0 view .LVU179
 1030 0004 0720     		movs	r0, #7
 1031              	.LVL107:
 1032              		.loc 1 296 19 view .LVU180
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 24


 1033 0006 FFF7FEFF 		bl	nrf24_ReadReg
 1034              	.LVL108:
 1035 000a 0346     		mov	r3, r0
 1036              	.LVL109:
 297:../../CM7/Core/Src/NRF24L01.c **** 
 298:../../CM7/Core/Src/NRF24L01.c **** 	if ((status&(1<<6))&&(status&(pipenum<<1)))
 1037              		.loc 1 298 2 is_stmt 1 view .LVU181
 1038              		.loc 1 298 5 is_stmt 0 view .LVU182
 1039 000c 10F04000 		ands	r0, r0, #64
 1040              	.LVL110:
 1041              		.loc 1 298 5 view .LVU183
 1042 0010 03D0     		beq	.L60
 1043              		.loc 1 298 21 discriminator 1 view .LVU184
 1044 0012 13EA4400 		ands	r0, r3, r4, lsl #1
 1045 0016 01D1     		bne	.L63
 299:../../CM7/Core/Src/NRF24L01.c **** 	{
 300:../../CM7/Core/Src/NRF24L01.c **** 
 301:../../CM7/Core/Src/NRF24L01.c **** 		nrf24_WriteReg(STATUS, (1<<6));
 302:../../CM7/Core/Src/NRF24L01.c **** 
 303:../../CM7/Core/Src/NRF24L01.c **** 		return 1;
 304:../../CM7/Core/Src/NRF24L01.c **** 	}
 305:../../CM7/Core/Src/NRF24L01.c **** 
 306:../../CM7/Core/Src/NRF24L01.c **** 	return 0;
 1046              		.loc 1 306 9 view .LVU185
 1047 0018 0020     		movs	r0, #0
 1048              	.L60:
 307:../../CM7/Core/Src/NRF24L01.c **** }
 1049              		.loc 1 307 1 view .LVU186
 1050 001a 10BD     		pop	{r4, pc}
 1051              	.LVL111:
 1052              	.L63:
 301:../../CM7/Core/Src/NRF24L01.c **** 
 1053              		.loc 1 301 3 is_stmt 1 view .LVU187
 1054 001c 4021     		movs	r1, #64
 1055 001e 0720     		movs	r0, #7
 1056 0020 FFF7FEFF 		bl	nrf24_WriteReg
 1057              	.LVL112:
 303:../../CM7/Core/Src/NRF24L01.c **** 	}
 1058              		.loc 1 303 3 view .LVU188
 303:../../CM7/Core/Src/NRF24L01.c **** 	}
 1059              		.loc 1 303 10 is_stmt 0 view .LVU189
 1060 0024 0120     		movs	r0, #1
 1061 0026 F8E7     		b	.L60
 1062              		.cfi_endproc
 1063              	.LFE158:
 1065              		.section	.text.NRF24_Receive,"ax",%progbits
 1066              		.align	1
 1067              		.global	NRF24_Receive
 1068              		.syntax unified
 1069              		.thumb
 1070              		.thumb_func
 1072              	NRF24_Receive:
 1073              	.LVL113:
 1074              	.LFB159:
 308:../../CM7/Core/Src/NRF24L01.c **** 
 309:../../CM7/Core/Src/NRF24L01.c **** 
 310:../../CM7/Core/Src/NRF24L01.c **** void NRF24_Receive (uint8_t *data)
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 25


 311:../../CM7/Core/Src/NRF24L01.c **** {
 1075              		.loc 1 311 1 is_stmt 1 view -0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              		.loc 1 311 1 is_stmt 0 view .LVU191
 1080 0000 30B5     		push	{r4, r5, lr}
 1081              	.LCFI31:
 1082              		.cfi_def_cfa_offset 12
 1083              		.cfi_offset 4, -12
 1084              		.cfi_offset 5, -8
 1085              		.cfi_offset 14, -4
 1086 0002 83B0     		sub	sp, sp, #12
 1087              	.LCFI32:
 1088              		.cfi_def_cfa_offset 24
 1089 0004 0446     		mov	r4, r0
 312:../../CM7/Core/Src/NRF24L01.c **** 	uint8_t cmdtosend = 0;
 1090              		.loc 1 312 2 is_stmt 1 view .LVU192
 1091              		.loc 1 312 10 is_stmt 0 view .LVU193
 1092 0006 0023     		movs	r3, #0
 1093 0008 8DF80730 		strb	r3, [sp, #7]
 313:../../CM7/Core/Src/NRF24L01.c **** 
 314:../../CM7/Core/Src/NRF24L01.c **** 	// select the device
 315:../../CM7/Core/Src/NRF24L01.c **** 	CS_Select();
 1094              		.loc 1 315 2 is_stmt 1 view .LVU194
 1095 000c FFF7FEFF 		bl	CS_Select
 1096              	.LVL114:
 316:../../CM7/Core/Src/NRF24L01.c **** 
 317:../../CM7/Core/Src/NRF24L01.c **** 	// payload command
 318:../../CM7/Core/Src/NRF24L01.c **** 	cmdtosend = R_RX_PAYLOAD;
 1097              		.loc 1 318 2 view .LVU195
 1098              		.loc 1 318 12 is_stmt 0 view .LVU196
 1099 0010 6123     		movs	r3, #97
 1100 0012 8DF80730 		strb	r3, [sp, #7]
 319:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Transmit(NRF24_SPI, &cmdtosend, 1, 100);
 1101              		.loc 1 319 2 is_stmt 1 view .LVU197
 1102 0016 0D4D     		ldr	r5, .L66
 1103 0018 6423     		movs	r3, #100
 1104 001a 0122     		movs	r2, #1
 1105 001c 0DF10701 		add	r1, sp, #7
 1106 0020 2846     		mov	r0, r5
 1107 0022 FFF7FEFF 		bl	HAL_SPI_Transmit
 1108              	.LVL115:
 320:../../CM7/Core/Src/NRF24L01.c **** 
 321:../../CM7/Core/Src/NRF24L01.c **** 	// Receive the payload
 322:../../CM7/Core/Src/NRF24L01.c **** 	HAL_SPI_Receive(NRF24_SPI, data, 32, 1000);
 1109              		.loc 1 322 2 view .LVU198
 1110 0026 4FF47A73 		mov	r3, #1000
 1111 002a 2022     		movs	r2, #32
 1112 002c 2146     		mov	r1, r4
 1113 002e 2846     		mov	r0, r5
 1114 0030 FFF7FEFF 		bl	HAL_SPI_Receive
 1115              	.LVL116:
 323:../../CM7/Core/Src/NRF24L01.c **** 
 324:../../CM7/Core/Src/NRF24L01.c **** 	// Unselect the device
 325:../../CM7/Core/Src/NRF24L01.c **** 	CS_UnSelect();
 1116              		.loc 1 325 2 view .LVU199
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 26


 1117 0034 FFF7FEFF 		bl	CS_UnSelect
 1118              	.LVL117:
 326:../../CM7/Core/Src/NRF24L01.c **** 
 327:../../CM7/Core/Src/NRF24L01.c **** 	HAL_Delay(1);
 1119              		.loc 1 327 2 view .LVU200
 1120 0038 0120     		movs	r0, #1
 1121 003a FFF7FEFF 		bl	HAL_Delay
 1122              	.LVL118:
 328:../../CM7/Core/Src/NRF24L01.c **** 
 329:../../CM7/Core/Src/NRF24L01.c **** 	cmdtosend = FLUSH_RX;
 1123              		.loc 1 329 2 view .LVU201
 1124              		.loc 1 329 12 is_stmt 0 view .LVU202
 1125 003e E220     		movs	r0, #226
 1126 0040 8DF80700 		strb	r0, [sp, #7]
 330:../../CM7/Core/Src/NRF24L01.c **** 	nrfsendCmd(cmdtosend);
 1127              		.loc 1 330 2 is_stmt 1 view .LVU203
 1128 0044 FFF7FEFF 		bl	nrfsendCmd
 1129              	.LVL119:
 331:../../CM7/Core/Src/NRF24L01.c **** }
 1130              		.loc 1 331 1 is_stmt 0 view .LVU204
 1131 0048 03B0     		add	sp, sp, #12
 1132              	.LCFI33:
 1133              		.cfi_def_cfa_offset 12
 1134              		@ sp needed
 1135 004a 30BD     		pop	{r4, r5, pc}
 1136              	.LVL120:
 1137              	.L67:
 1138              		.loc 1 331 1 view .LVU205
 1139              		.align	2
 1140              	.L66:
 1141 004c 00000000 		.word	hspi1
 1142              		.cfi_endproc
 1143              	.LFE159:
 1145              		.section	.text.NRF24_ReadAll,"ax",%progbits
 1146              		.align	1
 1147              		.global	NRF24_ReadAll
 1148              		.syntax unified
 1149              		.thumb
 1150              		.thumb_func
 1152              	NRF24_ReadAll:
 1153              	.LVL121:
 1154              	.LFB160:
 332:../../CM7/Core/Src/NRF24L01.c **** 
 333:../../CM7/Core/Src/NRF24L01.c **** 
 334:../../CM7/Core/Src/NRF24L01.c **** 
 335:../../CM7/Core/Src/NRF24L01.c **** // Read all the Register data
 336:../../CM7/Core/Src/NRF24L01.c **** void NRF24_ReadAll (uint8_t *data)
 337:../../CM7/Core/Src/NRF24L01.c **** {
 1155              		.loc 1 337 1 is_stmt 1 view -0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 0
 1158              		@ frame_needed = 0, uses_anonymous_args = 0
 1159              		.loc 1 337 1 is_stmt 0 view .LVU207
 1160 0000 38B5     		push	{r3, r4, r5, lr}
 1161              	.LCFI34:
 1162              		.cfi_def_cfa_offset 16
 1163              		.cfi_offset 3, -16
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 27


 1164              		.cfi_offset 4, -12
 1165              		.cfi_offset 5, -8
 1166              		.cfi_offset 14, -4
 1167 0002 0546     		mov	r5, r0
 338:../../CM7/Core/Src/NRF24L01.c **** 	for (int i=0; i<10; i++)
 1168              		.loc 1 338 2 is_stmt 1 view .LVU208
 1169              	.LBB3:
 1170              		.loc 1 338 7 view .LVU209
 1171              	.LVL122:
 1172              		.loc 1 338 11 is_stmt 0 view .LVU210
 1173 0004 0024     		movs	r4, #0
 1174              		.loc 1 338 2 view .LVU211
 1175 0006 04E0     		b	.L69
 1176              	.LVL123:
 1177              	.L70:
 339:../../CM7/Core/Src/NRF24L01.c **** 	{
 340:../../CM7/Core/Src/NRF24L01.c **** 		*(data+i) = nrf24_ReadReg(i);
 1178              		.loc 1 340 3 is_stmt 1 discriminator 3 view .LVU212
 1179              		.loc 1 340 15 is_stmt 0 discriminator 3 view .LVU213
 1180 0008 E0B2     		uxtb	r0, r4
 1181 000a FFF7FEFF 		bl	nrf24_ReadReg
 1182              	.LVL124:
 1183              		.loc 1 340 13 discriminator 3 view .LVU214
 1184 000e 2855     		strb	r0, [r5, r4]
 338:../../CM7/Core/Src/NRF24L01.c **** 	for (int i=0; i<10; i++)
 1185              		.loc 1 338 23 is_stmt 1 discriminator 3 view .LVU215
 1186 0010 0134     		adds	r4, r4, #1
 1187              	.LVL125:
 1188              	.L69:
 338:../../CM7/Core/Src/NRF24L01.c **** 	for (int i=0; i<10; i++)
 1189              		.loc 1 338 17 discriminator 1 view .LVU216
 1190 0012 092C     		cmp	r4, #9
 1191 0014 F8DD     		ble	.L70
 1192              	.LBE3:
 341:../../CM7/Core/Src/NRF24L01.c **** 	}
 342:../../CM7/Core/Src/NRF24L01.c **** 
 343:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_ReadReg_Multi(RX_ADDR_P0, (data+10), 5);
 1193              		.loc 1 343 2 view .LVU217
 1194 0016 0522     		movs	r2, #5
 1195 0018 05F10A01 		add	r1, r5, #10
 1196 001c 0A20     		movs	r0, #10
 1197 001e FFF7FEFF 		bl	nrf24_ReadReg_Multi
 1198              	.LVL126:
 344:../../CM7/Core/Src/NRF24L01.c **** 
 345:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_ReadReg_Multi(RX_ADDR_P1, (data+15), 5);
 1199              		.loc 1 345 2 view .LVU218
 1200 0022 0522     		movs	r2, #5
 1201 0024 05F10F01 		add	r1, r5, #15
 1202 0028 0B20     		movs	r0, #11
 1203 002a FFF7FEFF 		bl	nrf24_ReadReg_Multi
 1204              	.LVL127:
 346:../../CM7/Core/Src/NRF24L01.c **** 
 347:../../CM7/Core/Src/NRF24L01.c **** 	*(data+20) = nrf24_ReadReg(RX_ADDR_P2);
 1205              		.loc 1 347 2 view .LVU219
 1206              		.loc 1 347 15 is_stmt 0 view .LVU220
 1207 002e 0C20     		movs	r0, #12
 1208 0030 FFF7FEFF 		bl	nrf24_ReadReg
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 28


 1209              	.LVL128:
 1210              		.loc 1 347 13 view .LVU221
 1211 0034 2875     		strb	r0, [r5, #20]
 348:../../CM7/Core/Src/NRF24L01.c **** 	*(data+21) = nrf24_ReadReg(RX_ADDR_P3);
 1212              		.loc 1 348 2 is_stmt 1 view .LVU222
 1213              		.loc 1 348 15 is_stmt 0 view .LVU223
 1214 0036 0D20     		movs	r0, #13
 1215 0038 FFF7FEFF 		bl	nrf24_ReadReg
 1216              	.LVL129:
 1217              		.loc 1 348 13 view .LVU224
 1218 003c 6875     		strb	r0, [r5, #21]
 349:../../CM7/Core/Src/NRF24L01.c **** 	*(data+22) = nrf24_ReadReg(RX_ADDR_P4);
 1219              		.loc 1 349 2 is_stmt 1 view .LVU225
 1220              		.loc 1 349 15 is_stmt 0 view .LVU226
 1221 003e 0E20     		movs	r0, #14
 1222 0040 FFF7FEFF 		bl	nrf24_ReadReg
 1223              	.LVL130:
 1224              		.loc 1 349 13 view .LVU227
 1225 0044 A875     		strb	r0, [r5, #22]
 350:../../CM7/Core/Src/NRF24L01.c **** 	*(data+23) = nrf24_ReadReg(RX_ADDR_P5);
 1226              		.loc 1 350 2 is_stmt 1 view .LVU228
 1227              		.loc 1 350 15 is_stmt 0 view .LVU229
 1228 0046 0F20     		movs	r0, #15
 1229 0048 FFF7FEFF 		bl	nrf24_ReadReg
 1230              	.LVL131:
 1231              		.loc 1 350 13 view .LVU230
 1232 004c E875     		strb	r0, [r5, #23]
 351:../../CM7/Core/Src/NRF24L01.c **** 
 352:../../CM7/Core/Src/NRF24L01.c **** 	nrf24_ReadReg_Multi(RX_ADDR_P0, (data+24), 5);
 1233              		.loc 1 352 2 is_stmt 1 view .LVU231
 1234 004e 0522     		movs	r2, #5
 1235 0050 05F11801 		add	r1, r5, #24
 1236 0054 0A20     		movs	r0, #10
 1237 0056 FFF7FEFF 		bl	nrf24_ReadReg_Multi
 1238              	.LVL132:
 353:../../CM7/Core/Src/NRF24L01.c **** 
 354:../../CM7/Core/Src/NRF24L01.c **** 	for (int i=29; i<38; i++)
 1239              		.loc 1 354 2 view .LVU232
 1240              	.LBB4:
 1241              		.loc 1 354 7 view .LVU233
 1242              		.loc 1 354 11 is_stmt 0 view .LVU234
 1243 005a 1D24     		movs	r4, #29
 1244              	.LVL133:
 1245              		.loc 1 354 2 view .LVU235
 1246 005c 06E0     		b	.L71
 1247              	.LVL134:
 1248              	.L72:
 355:../../CM7/Core/Src/NRF24L01.c **** 	{
 356:../../CM7/Core/Src/NRF24L01.c **** 		*(data+i) = nrf24_ReadReg(i-12);
 1249              		.loc 1 356 3 is_stmt 1 discriminator 3 view .LVU236
 1250              		.loc 1 356 15 is_stmt 0 discriminator 3 view .LVU237
 1251 005e A4F10C00 		sub	r0, r4, #12
 1252 0062 C0B2     		uxtb	r0, r0
 1253 0064 FFF7FEFF 		bl	nrf24_ReadReg
 1254              	.LVL135:
 1255              		.loc 1 356 13 discriminator 3 view .LVU238
 1256 0068 2855     		strb	r0, [r5, r4]
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 29


 354:../../CM7/Core/Src/NRF24L01.c **** 	{
 1257              		.loc 1 354 24 is_stmt 1 discriminator 3 view .LVU239
 1258 006a 0134     		adds	r4, r4, #1
 1259              	.LVL136:
 1260              	.L71:
 354:../../CM7/Core/Src/NRF24L01.c **** 	{
 1261              		.loc 1 354 18 discriminator 1 view .LVU240
 1262 006c 252C     		cmp	r4, #37
 1263 006e F6DD     		ble	.L72
 1264              	.LBE4:
 357:../../CM7/Core/Src/NRF24L01.c **** 	}
 358:../../CM7/Core/Src/NRF24L01.c **** 
 359:../../CM7/Core/Src/NRF24L01.c **** }
 1265              		.loc 1 359 1 is_stmt 0 view .LVU241
 1266 0070 38BD     		pop	{r3, r4, r5, pc}
 1267              		.loc 1 359 1 view .LVU242
 1268              		.cfi_endproc
 1269              	.LFE160:
 1271              		.text
 1272              	.Letext0:
 1273              		.file 2 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 1274              		.file 3 "/Applications/ArmGNUToolchain/12.3.rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 1275              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h755xx.h"
 1276              		.file 5 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1277              		.file 6 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1278              		.file 7 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1279              		.file 8 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_spi.h"
 1280              		.file 9 "../../Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 NRF24L01.c
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:20     .text.CS_Select:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:26     .text.CS_Select:00000000 CS_Select
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:48     .text.CS_Select:00000010 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:53     .text.CS_UnSelect:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:59     .text.CS_UnSelect:00000000 CS_UnSelect
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:81     .text.CS_UnSelect:00000010 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:86     .text.CE_Enable:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:92     .text.CE_Enable:00000000 CE_Enable
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:114    .text.CE_Enable:00000010 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:119    .text.CE_Disable:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:125    .text.CE_Disable:00000000 CE_Disable
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:147    .text.CE_Disable:00000010 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:152    .text.nrf24_WriteReg:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:158    .text.nrf24_WriteReg:00000000 nrf24_WriteReg
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:205    .text.nrf24_WriteReg:0000002c $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:210    .text.nrf24_WriteRegMulti:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:216    .text.nrf24_WriteRegMulti:00000000 nrf24_WriteRegMulti
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:275    .text.nrf24_WriteRegMulti:00000038 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:280    .text.nrf24_ReadReg:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:286    .text.nrf24_ReadReg:00000000 nrf24_ReadReg
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:339    .text.nrf24_ReadReg:0000003c $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:344    .text.nrf24_ReadReg_Multi:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:350    .text.nrf24_ReadReg_Multi:00000000 nrf24_ReadReg_Multi
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:403    .text.nrf24_ReadReg_Multi:00000038 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:408    .text.nrfsendCmd:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:414    .text.nrfsendCmd:00000000 nrfsendCmd
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:452    .text.nrfsendCmd:00000024 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:457    .rodata.nrf24_reset.str1.4:00000000 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:464    .text.nrf24_reset:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:470    .text.nrf24_reset:00000000 nrf24_reset
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:677    .text.nrf24_reset:0000011c $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:683    .text.NRF24_Init:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:689    .text.NRF24_Init:00000000 NRF24_Init
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:751    .text.NRF24_TxMode:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:757    .text.NRF24_TxMode:00000000 NRF24_TxMode
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:811    .text.NRF24_Transmit:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:817    .text.NRF24_Transmit:00000000 NRF24_Transmit
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:912    .text.NRF24_Transmit:00000068 $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:917    .text.NRF24_RxMode:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:923    .text.NRF24_RxMode:00000000 NRF24_RxMode
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:1008   .text.isDataAvailable:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:1014   .text.isDataAvailable:00000000 isDataAvailable
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:1066   .text.NRF24_Receive:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:1072   .text.NRF24_Receive:00000000 NRF24_Receive
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:1141   .text.NRF24_Receive:0000004c $d
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:1146   .text.NRF24_ReadAll:00000000 $t
/var/folders/x4/_dxb6x6j5tj5dxk7q51dgwn40000gn/T//ccdifDqf.s:1152   .text.NRF24_ReadAll:00000000 NRF24_ReadAll

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi1
HAL_SPI_Receive
HAL_Delay
